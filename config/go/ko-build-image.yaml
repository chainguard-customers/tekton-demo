apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: ko-build-image
spec:
  params:
    - name: MAIN_DIR
      description: Directory containing the main executable (one with main func) to build.
    - name: KO_DOCKER_REPO
      description: Registry to push the image to
      type: string
      default: ghcr.io/chainguard-dev
    - name: github-token-secret
      type: string
      description: name of the secret holding the github-token
      default: github-token
    - name: REGISTRY
      type: string
      default: ghcr.io
    - name: USER
      type: string
      default: strongjz
  results:
    - name: IMAGES
      description: Digest of the image just built.
  workspaces:
    - name: source
      description: Where the dependencies and source code are.
  steps:
    - name: ko-build-image
      image: ghcr.io/google/ko:0187841b164187cd835eb96519d5e282d69ca688
      env:
        - name: REGISTRY
          value: $(params.REGISTRY)
        - name: USER
          value: $(params.USER)
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: $(params.github-token-secret)
              key: GITHUB_TOKEN
        - name: KO_DOCKER_REPO
          value: $(params.KO_DOCKER_REPO)
        - name: GOMODCACHE
          value: $(workspaces.source.path)/gomod
      resources:
        requests:
          memory: 1Gi
          cpu: 1
        limits:
          memory: 2Gi
          cpu: 1
      script: |
        cd $(workspaces.source.path)
        ko build --image-refs=ko.images $(params.MAIN_DIR)
        
        echo "Image build: $(cat ko.images)"
        
        cat ko.images | tee /tekton/results/IMAGES
        
        cat /tekton/results/IMAGES
        
